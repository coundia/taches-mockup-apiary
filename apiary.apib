FORMAT: 1A
HOST: https://private-8ed568-stodo.apiary-mock.com/

# Api todo

This is a very simple documentation for a simple ToDo App. An example for the Free Code Camp to use when working on their project.

Our API will be implemented having the REST API principles in mind. If you don't know much about REST you should probably do some research. This is a good starting point: [Best practices for a pragmatic restful api](http://www.vinaysahni.com/best-practices-for-a-pragmatic-restful-api)

Based on this our API will return JSON as a response to our calls. You can find out more about JSON [here](http://json.org/).

We will use the proper HTTP response codes for the calls:

* 200 OK - The request has succeeded.
* 201 Created - The request has succeeded and resulted in a new resource being created.
* 204 No Content - The request has succeeded but does not need to return.
* 400 Bad Request - The request could not be interpreted by the server. Malformed syntax.
* 401 Unauthorized - The request needs authentication.
* 403 Forbidden - The user is not authorised to make the request.
* 404 Not found - The server could not match your request.
* 500 Internal Server Error - The server encountered an unexpected error.

More informations about the HTTP status codes you can find [here](http://en.wikipedia.org/wiki/List_of_HTTP_status_codes

## Notes

You can define multiple responses for a request. By example when a user tries to create an account and the email already exists in our database we should send an error response or if an user tries to access the todo list without authorisation we should sent a 401 response. For making this more easy to test by you guys decided to ignore those cases for now but you can find how to implement this [here](http://support.apiary.io/knowledgebase/articles/117119-handling-multiple-actions-on-a-single-resource) is a guide how you can implement them

# ToDo API Root [/]

This resource does not have any attributes. Instead it offers the initial
API affordances in the form of the links in the JSON body.

## Retrieve the Entry Point [GET]

+ Response 200 (application/json)

        {
            "hello_url": "/hello",
            "users_url": "/users",
            "todos_url": "/todos"
        }

# GET /hello
+ Response 200 (text/plain)

        Hello World from Api!

## Group Users

Resources related to ueser in the API.

## Create a new user [/users]

A User object has the following attributes:

+ email
+ confirmed

### Create a new user [POST]

This action allows you to create a new user.

+ Request (application/json)


        {
            "email": "camper@fcc.com",
            "password" : "xyz"
        }


+ Response 201 (application/json)

        {
            "email": "camper@fcc.com",
            "confirmed" : false,
            "created": "2014-11-11T08:40:51.620Z",
            "updated": "2014-11-11T08:40:51.620Z"
        }

## Confirm a created new user [/users/confirm/{token}]

Confirm a new user account by clicking on the link sent in the confirmation email.

+ Parameters
    + token (required, string, `xsfskfjsdjkfbsdjfbs`) ... String `token` the token generated by our app to be used for the account confirmation.

### Confirm user account [GET]

+ Response 200 (application/json)

        {
            "email": "camper@fcc.com",
            "confirmed" : true,
            "created": "2014-11-11T08:40:51.620Z",
            "updated": "2014-11-11T08:40:51.620Z"
        }

## Login [/users/login]

Login into your user account. Will send an email and password and if the login was successful you will receive the user information and a token to store on your local storage and use for the future requests.

### Login [POST]

+ Request (application/json)


        {
            "email": "camper@fcc.com",
            "password" : "xyz"
        }


+ Response 200 (application/json)

    + Header

            Authorization:Basic eyJ1c2VyIjp7ImlkIjoyMTUxNjQsImVtYWlsIjoic3VwcG9ydEBzd2lwZXRhcHNlbGwuY29tIn0sImNvbnRleHQiOiJzdG9yZXMvOWoydHd0Z2QiLCJzdG9yZV9oYXNoIjoiOWoydHd0Z2QiLCJ0aW1lc3RhbXAiOjE0MzI5MDQ1MzAuMDg0NTQ3OH0=.YmI1MjI0M2Q1YWY4MGI5MTg2NDZkOTYwYzBkNTkxZjAzMzc2YTYxYjI2NTc5N2E1NjFlODhlMDE1ZjhjYzlkZA==

    + Body

            {
                "email": "camper@fcc.com",
                "confirmed" : false,
                "created": "2014-11-11T08:40:51.620Z",
                "updated": "2014-11-11T08:40:51.620Z",
            }


## Group ToDos

## TODO Collection [/todos]

The TODO Collections is protected for every user. Only a logged in user can access this information and can only access it's own todo list. For that the request must include the authorization token received on login.

A TODO object has the following attributes:

+ id
+ title
+ completed

### List all TODOS for a user [GET]

+ Request (application/json)
    + Header

            Authorization:Basic eyJ1c2VyIjp7ImlkIjoyMTUxNjQsImVtYWlsIjoic3VwcG9ydEBzd2lwZXRhcHNlbGwuY29tIn0sImNvbnRleHQiOiJzdG9yZXMvOWoydHd0Z2QiLCJzdG9yZV9oYXNoIjoiOWoydHd0Z2QiLCJ0aW1lc3RhbXAiOjE0MzI5MDQ1MzAuMDg0NTQ3OH0=.YmI1MjI0M2Q1YWY4MGI5MTg2NDZkOTYwYzBkNTkxZjAzMzc2YTYxYjI2NTc5N2E1NjFlODhlMDE1ZjhjYzlkZA==

+ Response 200 (application/json)
    + Header

            Authorization:Basic eyJ1c2VyIjp7ImlkIjoyMTUxNjQsImVtYWlsIjoic3VwcG9ydEBzd2lwZXRhcHNlbGwuY29tIn0sImNvbnRleHQiOiJzdG9yZXMvOWoydHd0Z2QiLCJzdG9yZV9oYXNoIjoiOWoydHd0Z2QiLCJ0aW1lc3RhbXAiOjE0MzI5MDQ1MzAuMDg0NTQ3OH0=.YmI1MjI0M2Q1YWY4MGI5MTg2NDZkOTYwYzBkNTkxZjAzMzc2YTYxYjI2NTc5N2E1NjFlODhlMDE1ZjhjYzlkZA==

    + Body


            [
                {
                    "id": 1,
                    "title": "Finish the Free Code Camp curriculum!",
                    "completed": false
                },
                {
                    "id": 2,
                    "title": "Sleep more.",
                    "completed": false
                }
            ]

### Create a TODO [POST]
+ Request (application/json)
    + Header

            Authorization:Basic eyJ1c2VyIjp7ImlkIjoyMTUxNjQsImVtYWlsIjoic3VwcG9ydEBzd2lwZXRhcHNlbGwuY29tIn0sImNvbnRleHQiOiJzdG9yZXMvOWoydHd0Z2QiLCJzdG9yZV9oYXNoIjoiOWoydHd0Z2QiLCJ0aW1lc3RhbXAiOjE0MzI5MDQ1MzAuMDg0NTQ3OH0=.YmI1MjI0M2Q1YWY4MGI5MTg2NDZkOTYwYzBkNTkxZjAzMzc2YTYxYjI2NTc5N2E1NjFlODhlMDE1ZjhjYzlkZA==
    + Body

            {
                "title": "Learn React."
            }

+ Response 201 (application/json)
    + Header

            Authorization:Basic eyJ1c2VyIjp7ImlkIjoyMTUxNjQsImVtYWlsIjoic3VwcG9ydEBzd2lwZXRhcHNlbGwuY29tIn0sImNvbnRleHQiOiJzdG9yZXMvOWoydHd0Z2QiLCJzdG9yZV9oYXNoIjoiOWoydHd0Z2QiLCJ0aW1lc3RhbXAiOjE0MzI5MDQ1MzAuMDg0NTQ3OH0=.YmI1MjI0M2Q1YWY4MGI5MTg2NDZkOTYwYzBkNTkxZjAzMzc2YTYxYjI2NTc5N2E1NjFlODhlMDE1ZjhjYzlkZA==

    + Body

            {
                "id": 3,
                "title": "Learn React." ,
                "completed": false
            }

## TODO singe item changes [/todos/{id}]
A single Todo object with all its details

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Note to perform action with. Has example value.


### Retrieve a TODO [GET]
+ Request (application/json)
    + Header

            Authorization:Basic eyJ1c2VyIjp7ImlkIjoyMTUxNjQsImVtYWlsIjoic3VwcG9ydEBzd2lwZXRhcHNlbGwuY29tIn0sImNvbnRleHQiOiJzdG9yZXMvOWoydHd0Z2QiLCJzdG9yZV9oYXNoIjoiOWoydHd0Z2QiLCJ0aW1lc3RhbXAiOjE0MzI5MDQ1MzAuMDg0NTQ3OH0=.YmI1MjI0M2Q1YWY4MGI5MTg2NDZkOTYwYzBkNTkxZjAzMzc2YTYxYjI2NTc5N2E1NjFlODhlMDE1ZjhjYzlkZA==

+ Response 200 (application/json)

    + Header

            Authorization:Basic eyJ1c2VyIjp7ImlkIjoyMTUxNjQsImVtYWlsIjoic3VwcG9ydEBzd2lwZXRhcHNlbGwuY29tIn0sImNvbnRleHQiOiJzdG9yZXMvOWoydHd0Z2QiLCJzdG9yZV9oYXNoIjoiOWoydHd0Z2QiLCJ0aW1lc3RhbXAiOjE0MzI5MDQ1MzAuMDg0NTQ3OH0=.YmI1MjI0M2Q1YWY4MGI5MTg2NDZkOTYwYzBkNTkxZjAzMzc2YTYxYjI2NTc5N2E1NjFlODhlMDE1ZjhjYzlkZA==
    + Body

            {
                "id": 2,
                "title": "Sleep more.",
                "completed": false
            }

### Update a TODO [PUT]
+ Request (application/json)
    + Header

            Authorization:Basic eyJ1c2VyIjp7ImlkIjoyMTUxNjQsImVtYWlsIjoic3VwcG9ydEBzd2lwZXRhcHNlbGwuY29tIn0sImNvbnRleHQiOiJzdG9yZXMvOWoydHd0Z2QiLCJzdG9yZV9oYXNoIjoiOWoydHd0Z2QiLCJ0aW1lc3RhbXAiOjE0MzI5MDQ1MzAuMDg0NTQ3OH0=.YmI1MjI0M2Q1YWY4MGI5MTg2NDZkOTYwYzBkNTkxZjAzMzc2YTYxYjI2NTc5N2E1NjFlODhlMDE1ZjhjYzlkZA==
    + Body

            {
                "completed": true
            }
+ Response 200 (application/json)

    + Header

            Authorization:Basic eyJ1c2VyIjp7ImlkIjoyMTUxNjQsImVtYWlsIjoic3VwcG9ydEBzd2lwZXRhcHNlbGwuY29tIn0sImNvbnRleHQiOiJzdG9yZXMvOWoydHd0Z2QiLCJzdG9yZV9oYXNoIjoiOWoydHd0Z2QiLCJ0aW1lc3RhbXAiOjE0MzI5MDQ1MzAuMDg0NTQ3OH0=.YmI1MjI0M2Q1YWY4MGI5MTg2NDZkOTYwYzBkNTkxZjAzMzc2YTYxYjI2NTc5N2E1NjFlODhlMDE1ZjhjYzlkZA==
    + Body

            {
                "id": 2,
                "title": "Sleep more.",
                "completed": true
            }

### Remove a TODO [DELETE]
+ Request (application/json)
    + Header

            Authorization:Basic eyJ1c2VyIjp7ImlkIjoyMTUxNjQsImVtYWlsIjoic3VwcG9ydEBzd2lwZXRhcHNlbGwuY29tIn0sImNvbnRleHQiOiJzdG9yZXMvOWoydHd0Z2QiLCJzdG9yZV9oYXNoIjoiOWoydHd0Z2QiLCJ0aW1lc3RhbXAiOjE0MzI5MDQ1MzAuMDg0NTQ3OH0=.YmI1MjI0M2Q1YWY4MGI5MTg2NDZkOTYwYzBkNTkxZjAzMzc2YTYxYjI2NTc5N2E1NjFlODhlMDE1ZjhjYzlkZA==

+ Response 204
    + Header

            Authorization:Basic eyJ1c2VyIjp7ImlkIjoyMTUxNjQsImVtYWlsIjoic3VwcG9ydEBzd2lwZXRhcHNlbGwuY29tIn0sImNvbnRleHQiOiJzdG9yZXMvOWoydHd0Z2QiLCJzdG9yZV9oYXNoIjoiOWoydHd0Z2QiLCJ0aW1lc3RhbXAiOjE0MzI5MDQ1MzAuMDg0NTQ3OH0=.YmI1MjI0M2Q1YWY4MGI5MTg2NDZkOTYwYzBkNTkxZjAzMzc2YTYxYjI2NTc5N2E1NjFlODhlMDE1ZjhjYzlkZA==
